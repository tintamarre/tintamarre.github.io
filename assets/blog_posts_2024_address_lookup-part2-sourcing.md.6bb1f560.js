import{_ as p,H as t,o as r,c,S as e,J as o,C as a,a as n}from"./chunks/framework.f141d1be.js";const u=JSON.parse('{"title":"Address lookup - Part 2 - Sourcing","description":"","frontmatter":{"date":"2024-11-01T00:00:00.000Z","title":"Address lookup - Part 2 - Sourcing","sidebar":false,"author":"Martin Erpicum","category":"Exploration","tags":["data_model","data_analysis","orchestrator"],"blog":"post","aside":"left","prev":false,"next":false},"headers":[],"relativePath":"blog/posts/2024/address_lookup-part2-sourcing.md"}'),y={name:"blog/posts/2024/address_lookup-part2-sourcing.md"};function D(i,s,F,B,d,A){const l=t("ImageCenter");return r(),c("div",null,[s[0]||(s[0]=e(`<p><em>Executive summary</em>: In Belgium, a collaborative effort between regional and federal authorities has led to the creation of a unified service that aggregates all Belgian addresses into a comprehensive dataset. This dataset is called <a href="https://bosa.belgium.be/fr/services/best-address-services" target="_blank" rel="noreferrer">BeStAddress</a>.</p><hr><h1 id="address-lookup-sourcing-2" tabindex="-1">Address lookup - Sourcing (2) <a class="header-anchor" href="#address-lookup-sourcing-2" aria-label="Permalink to &quot;Address lookup - Sourcing (2)&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>In the <a href="/blog/posts/2024/address_lookup-part1-problematic.html">previous post</a>, we have analyzed the data model of the BeStAddress dataset. In this post, we will focus on building a unified table that aggregates all the data from the different regions of Belgium. It will be the first step to build an address lookup service.</p><h2 id="sources" tabindex="-1">Sources <a class="header-anchor" href="#sources" aria-label="Permalink to &quot;Sources&quot;">​</a></h2><p>The BeStAddress dataset is composed of different tables. For facilitating the exploration, we used the CSV files provided by the BeStAddress service. XML and Web service is also available -- however XML is harder to parse and the API needs to register and get an API key.</p><p>The data is split into three regions:</p><ul><li>BeVlg: Flanders</li><li>BeBru: Brussels</li><li>BeWal: Wallonia</li></ul><p>As shown in the previous article, the data model is similar for the three regions -- but the model is not very obvious. For this reason, we will create a unified table that will be easier to work with. The concept of <a href="https://dataengineering.wiki/Concepts/One+Big+Table" target="_blank" rel="noreferrer"><strong>One Big Table</strong></a> designs are amazing for performance in analytics (expecially with OLAP system) but can be a <a href="/blog/posts/2024/address_lookup-part1-problematic.html">nightmare for data analysis and data quality</a>.</p><h2 id="downloading-the-data" tabindex="-1">Downloading the data <a class="header-anchor" href="#downloading-the-data" aria-label="Permalink to &quot;Downloading the data&quot;">​</a></h2><p>We will use <strong><a href="https://dagster.io" target="_blank" rel="noreferrer">Dagster</a></strong> to download the data and <strong><a href="https://duckdb.org" target="_blank" rel="noreferrer">DuckDB</a></strong> create the big table. Using Dagster will allow us to define a pipeline that will download the data from the different regions and store it in a local database. It will be easy to run the pipeline again if we need to update the data and we can also use Dagster to monitor the data quality.</p><h3 id="defining-the-asset-in-dagster" tabindex="-1">Defining the asset in Dagster <a class="header-anchor" href="#defining-the-asset-in-dagster" aria-label="Permalink to &quot;Defining the asset in Dagster&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">specs </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> table </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#BABED8;"> bestAddress_zones</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    output_name </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">raw_bestAddress_</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> table</span></span>
<span class="line"><span style="color:#BABED8;">    specs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">AssetSpec</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">key</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">output_name</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#BABED8;font-style:italic;">kinds</span><span style="color:#89DDFF;">={</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">duckdb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">azure</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pandas</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">multi_asset</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#BABED8;font-style:italic;">group_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">raw</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#BABED8;font-style:italic;">specs</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">specs</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#BABED8;font-style:italic;">can_subset</span><span style="color:#89DDFF;">=False,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#BABED8;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The complete BestAddress files loaded into a DuckDB</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">raw_bestaddress_tables</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#BABED8;font-style:italic;">context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">duckdb_bestAddress</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> DuckDBResource</span></span>
<span class="line"><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> MaterializeResult</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> table_name </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#BABED8;"> bestAddress_zones</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">        url </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://opendata.bosa.be/download/best/openaddress-</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> table_name </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.zip</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">        r </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> requests</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">        z </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> zipfile</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ZipFile</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">io</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">BytesIO</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">r</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">content</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#BABED8;">        extract_location </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/tmp/</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">        z</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">extractall</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">extract_location</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">        df </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> pd</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read_csv</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">            extract_location </span><span style="color:#89DDFF;">+</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">openaddress-</span><span style="color:#89DDFF;">&quot;</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">+</span><span style="color:#82AAFF;"> table_name </span><span style="color:#89DDFF;">+</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.csv</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#BABED8;font-style:italic;">dtype</span><span style="color:#89DDFF;">=</span><span style="color:#FFCB6B;">str</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">        asset_name </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">raw_bestAddress_</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> table_name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">        ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#BABED8;"> duckdb_bestAddress</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_connection</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#BABED8;"> conn</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">            conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;CREATE OR REPLACE TABLE </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">table_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> AS SELECT * FROM df&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">...</span></span></code></pre></div><h2 id="creating-the-unified-table" tabindex="-1">Creating the unified table <a class="header-anchor" href="#creating-the-unified-table" aria-label="Permalink to &quot;Creating the unified table&quot;">​</a></h2><p>Once the data is downloaded, we can create a unified table that will aggregate the data from the different regions. We will use the <code>UNION ALL</code> operator to merge the data from the different regions. We will also create a <strong>unique identifier</strong> of fixed length for each address by concatenating the <code>municipality_id</code>, <code>street_id</code>, and <code>address_id</code>. This will allow us to easily have a single identifier for each address (will be handy for the address lookup service).</p>`,16)),o(l,{src:"https://raw.githubusercontent.com/tintamarre/tintamarre.github.io/refs/heads/master/src/assets/diagrams/best_address.drawio.png",alt:"best address",width:"800"}),s[1]||(s[1]=e(`<p>We will also create some custom columns that will be useful. For example, we will create a <code>default_streetname</code> column that will contain the street name in the three languages. We will also create a <code>formatted_address1</code> and <code>formatted_address2</code> column that will contain the formatted address with the street name and the house number. Finally, we will rename <code>latitude</code> and <code>longitude</code> column that will contain the coordinates of the address.</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE OR REPLACE</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">bestAddress</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">AS</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">WITH</span><span style="color:#BABED8;"> raw_data </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> (</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">SELECT</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> bevlg </span><span style="color:#676E95;font-style:italic;">-- in practice we can also use the read_csv() function</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">UNION ALL</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">SELECT</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> bebru</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">UNION ALL</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">SELECT</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> bewal</span></span>
<span class="line"><span style="color:#BABED8;">    ),</span></span>
<span class="line"><span style="color:#BABED8;">    prepared_data </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> (</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">SELECT</span></span>
<span class="line"><span style="color:#BABED8;">    concat_ws(</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">,</span></span>
<span class="line"><span style="color:#BABED8;">      municipality_id,</span></span>
<span class="line"><span style="color:#BABED8;">      lpad(</span><span style="color:#82AAFF;">cast</span><span style="color:#BABED8;">(street_id </span><span style="color:#F78C6C;">as</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">varchar</span><span style="color:#BABED8;">), </span><span style="color:#F78C6C;">8</span><span style="color:#BABED8;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">),</span></span>
<span class="line"><span style="color:#BABED8;">      lpad(</span><span style="color:#82AAFF;">cast</span><span style="color:#BABED8;">(address_id </span><span style="color:#F78C6C;">as</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">varchar</span><span style="color:#BABED8;">), </span><span style="color:#F78C6C;">8</span><span style="color:#BABED8;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">    )</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> unique_id,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">status</span><span style="color:#BABED8;">,</span></span>
<span class="line"><span style="color:#BABED8;">    streetname_fr,</span></span>
<span class="line"><span style="color:#BABED8;">    streetname_de,</span></span>
<span class="line"><span style="color:#BABED8;">    streetname_nl,</span></span>
<span class="line"><span style="color:#BABED8;">    concat_ws(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> / </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, streetname_fr, streetname_de, streetname_nl)</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> default_streetname,</span></span>
<span class="line"><span style="color:#BABED8;">    house_number,</span></span>
<span class="line"><span style="color:#BABED8;">    box_number,</span></span>
<span class="line"><span style="color:#BABED8;">    concat_ws(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> / </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, house_number, box_number)</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> full_house_number,</span></span>
<span class="line"><span style="color:#BABED8;">    postcode,</span></span>
<span class="line"><span style="color:#BABED8;">    municipality_name_fr,</span></span>
<span class="line"><span style="color:#BABED8;">    municipality_name_de,</span></span>
<span class="line"><span style="color:#BABED8;">    municipality_name_nl,</span></span>
<span class="line"><span style="color:#BABED8;">       concat_ws(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> / </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, municipality_name_fr, municipality_name_de, municipality_name_nl)</span></span>
<span class="line"><span style="color:#BABED8;">         </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> default_municipality_name,</span></span>
<span class="line"><span style="color:#BABED8;">       concat_ws(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> / </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, postname_fr, postname_nl)</span></span>
<span class="line"><span style="color:#BABED8;">         </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> default_postname,</span></span>
<span class="line"><span style="color:#BABED8;">    postname_fr,</span></span>
<span class="line"><span style="color:#BABED8;">    postname_nl,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">concat</span><span style="color:#BABED8;">(</span></span>
<span class="line"><span style="color:#BABED8;">        concat_ws(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> / </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, streetname_fr, streetname_de, streetname_nl), </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">,</span></span>
<span class="line"><span style="color:#BABED8;">        concat_ws(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, house_number, box_number)</span></span>
<span class="line"><span style="color:#BABED8;">    ) </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> formatted_address1,</span></span>
<span class="line"><span style="color:#BABED8;">    concat_ws(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, postcode,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">coalesce</span><span style="color:#BABED8;">(</span></span>
<span class="line"><span style="color:#BABED8;">     concat_ws(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> / </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, postname_fr, postname_nl),</span></span>
<span class="line"><span style="color:#BABED8;">     concat_ws(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> / </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">, municipality_name_fr, municipality_name_de, municipality_name_nl)</span></span>
<span class="line"><span style="color:#BABED8;">      )</span></span>
<span class="line"><span style="color:#BABED8;">    ) </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> formatted_address2,</span></span>
<span class="line"><span style="color:#BABED8;">    region_code,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">cast</span><span style="color:#BABED8;">(municipality_id </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">integer</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> municipality_id,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">cast</span><span style="color:#BABED8;">(street_id </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">integer</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> street_id,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">cast</span><span style="color:#BABED8;">(address_id </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">integer</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> address_id,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">cast</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EPSG:4326_lat</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">FLOAT</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> latitude,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">cast</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EPSG:4326_lon</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">FLOAT</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F78C6C;">AS</span><span style="color:#BABED8;"> longitude</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> raw_data</span></span>
<span class="line"><span style="color:#BABED8;">    )</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F78C6C;">SELECT</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#BABED8;"> prepared_data</span></span></code></pre></div>`,2)),o(l,{src:"https://raw.githubusercontent.com/tintamarre/tintamarre.github.io/refs/heads/master/src/assets/images/bestaddress-sourcing.png",alt:"best address pipeline in Dagster",width:"800"}),s[2]||(s[2]=a("h2",{id:"next-steps",tabindex:"-1"},[n("Next steps "),a("a",{class:"header-anchor",href:"#next-steps","aria-label":'Permalink to "Next steps"'},"​")],-1)),s[3]||(s[3]=a("p",null,[n("In the "),a("a",{href:"/blog/posts/2025/address_lookup-part3-api.html"},"next post"),n(", we will focus on creating an address lookup service (FastAPI) that will use the unified table we have created.")],-1))])}const h=p(y,[["render",D]]);export{u as __pageData,h as default};
