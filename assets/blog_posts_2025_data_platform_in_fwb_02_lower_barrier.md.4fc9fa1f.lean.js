import{_ as n,H as l,o as r,c as p,S as t,J as s,C as o,a as i}from"./chunks/framework.f141d1be.js";const f=JSON.parse('{"title":"Data Platform - Part 3: Lower the barrier üöß","description":"","frontmatter":{"date":"2025-07-04T00:00:00.000Z","title":"Data Platform - Part 3: Lower the barrier üöß","sidebar":false,"author":"Martin Erpicum","category":"Article","tags":["data","orchestrator"],"blog":"post","aside":"left","prev":false,"next":false},"headers":[],"relativePath":"blog/posts/2025/data_platform_in_fwb_02_lower_barrier.md"}'),c={name:"blog/posts/2025/data_platform_in_fwb_02_lower_barrier.md"};function d(u,e,h,m,y,D){const a=l("ImageCenter");return r(),p("div",null,[e[0]||(e[0]=t('<p><em>Executive summary</em>: In a polycephalous organization, Data Governance is a complex challenge. This article explores the implementation of a Data Platform based on <a href="https://dagster.io/" target="_blank" rel="noreferrer">Dagster</a> for the <a href="https://www.federation-wallonie-bruxelles.be" target="_blank" rel="noreferrer">F√©d√©ration Wallonie-Bruxelles (FWB)</a>. It highlights the importance of automation, modularity, and component reusability to lower the technical barrier and improve data literacy among data analysts and data stewards.</p><hr><p><em>The views expressed on this website are my own and do not necessarily reflect the views of my employer.</em></p><p><strong>Table of contents</strong></p><nav class="table-of-contents"><ul><li><a href="#üßë‚Äçüíª-code-reusability">üßë‚Äçüíª Code reusability</a><ul><li><a href="#implement-a-common-library">Implement a common library</a></li><li><a href="#wiki-and-documentation">Wiki and documentation</a></li><li><a href="#use-llm-to-help-users">Use LLM to help users</a></li></ul></li><li><a href="#üìñ-level-up-the-data-literacy">üìñ Level up the data literacy</a><ul><li><a href="#communicate-about-the-data-platform">Communicate about the data platform</a></li><li><a href="#train-the-users">Train the users</a></li><li><a href="#build-a-community-to-share-knowledge">Build a community to share knowledge</a></li></ul></li><li><a href="#üìù-conclusion">üìù Conclusion</a></li></ul></nav><p>After the first two articles in this series, which focused on the <a href="/blog/posts/2025/data_platform_in_fwb_00_intro.html">architecture of our data platform</a> and the <a href="/blog/posts/2025/data_platform_in_fwb_01_automate.html">automation of our data pipelines</a>, this article will discuss how we lower the technical barrier for our users and improve their data literacy.</p><p>There are two main aspects to this:</p><ul><li><strong>Reduce the complexity</strong> of our data platform by providing common resources and components that can be reused by all data analysts and data stewards.</li><li><strong>Level up the data literacy</strong> of our users by training them, writing documentation, accompanying them in their first steps, and providing them with the necessary tools to understand and use the data platform.</li></ul><h2 id="üßë‚Äçüíª-code-reusability" tabindex="-1">üßë‚Äçüíª Code reusability <a class="header-anchor" href="#üßë‚Äçüíª-code-reusability" aria-label="Permalink to &quot;üßë‚Äçüíª Code reusability&quot;">‚Äã</a></h2><p>Without any surprise, <strong>Dagster</strong> provides two main concepts to help code reusability: <strong>resources</strong> and <strong>components</strong>.</p><ul><li><strong>Resources</strong> are used to connect to external systems (databases, APIs, etc.), to provide shared functionality (like logging, monitoring, etc.), or to encapsulate common logic that can be reused across multiple jobs or pipelines.</li><li><strong>Components</strong> (still kind of new) are used to define reusable pieces of code that can be invoke with a simple <code>YAML</code> config file configuration. Components can be used to encapsulate common tasks, such as data transformations, data loading, sheduling, etc.</li></ul><p>The two concepts are closely related, as resources are often used in components to connect to external systems.</p><p>Since our Data Platform leverages multiple code locations, and because we want to facilitate the onboarding of new data engineers, we needed to build a common Python library that contains all the resources, components, and custom libraries (utils) required to connect to our data sources. We called this library <code>dagster-cfwb</code>.</p><h3 id="implement-a-common-library" tabindex="-1">Implement a common library <a class="header-anchor" href="#implement-a-common-library" aria-label="Permalink to &quot;Implement a common library&quot;">‚Äã</a></h3>',14)),s(a,{src:"https://raw.githubusercontent.com/tintamarre/tintamarre.github.io/refs/heads/master/src/assets/diagrams/dagster_cfwb.drawio.png",alt:"",width:"400"}),e[1]||(e[1]=t(`<p>Our <strong>dagster-cfwb package</strong> contains all the Dagster resources needed to connect to our data sources. This library is used by most jobs and pipelines in our data platform. It includes resources for connecting to various databases (PostgreSQL, MSSQL, MySQL, DB2, ...), APIs (Denodo, custom APIs, OAuth2, ...), and other data sources (lakehouse, FTP, NFS, ...). It also includes custom components that can be used to perform common tasks, such as importing data from Denodo, storing to the data lakehouse, and reporting metadata.</p><p>This library is also extensively documented (directly visible in the Dagster UI), versioned, and tested with unit/integration tests during our GitLab CI/CD pipeline.</p><p>To illustrate this, let&#39;s take a look at the <code>AzureAdlsResource</code> and <code>PostgreSQLResource</code> resources that we implemented in the <code>dagster-cfwb</code> library. These resources are used to connect to an Azure Data Lake Storage (ADLS) and a PostgreSQL database, respectively.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight has-focused-lines"><code><span class="line has-focus"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> dagster_cfwb</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">resources</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">lakehouse</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">azure_adls_resource </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> AzureAdlsResource </span></span>
<span class="line has-focus"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> dagster_cfwb</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">resources</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">db</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">postgresql_resource </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> PostgreSQLResource </span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">asset</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span></span>
<span class="line has-focus"><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">gld_example</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#BABED8;font-style:italic;">context</span><span style="color:#89DDFF;">,</span></span>
<span class="line has-focus"><span style="color:#BABED8;">        </span><span style="color:#BABED8;font-style:italic;">azure_adls</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> AzureAdlsResource</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line has-focus"><span style="color:#BABED8;">        </span><span style="color:#BABED8;font-style:italic;">postgresql</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> PostgreSQLResource </span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">):</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#BABED8;">        df </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> azure_adls</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">query_blob_storage</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FROM &#39;azure://code_location/stg/example.parquet&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#BABED8;">        postgresql</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copy_from_df</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">df</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">example</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">MaterializeResult</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">                </span><span style="color:#BABED8;font-style:italic;">metadata</span><span style="color:#89DDFF;">={</span></span>
<span class="line"><span style="color:#82AAFF;">                        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dagster/row_count</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> df</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shape</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#82AAFF;">                        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">num_columns</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> df</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shape</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#82AAFF;">                        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dashboard_url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> MetadataValue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">                                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://vizu.intranet.fwb.be/example_dashboard</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">                        </span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#82AAFF;">                        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">documentation_url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> MetadataValue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">                                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://docs.intranet.fwb.be/example_documentation</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">                        </span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#82AAFF;">                </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>As you can see, the <code>AzureAdlsResource</code> and <code>PostgreSQLResource</code> resources are used to connect to the Azure Data Lake Storage and PostgreSQL database, respectively. The <code>gld_example</code> asset uses these resources to query data from the Azure Data Lake Storage and copy it to the PostgreSQL database. All the logic is encapsulated in the <code>dagster-cfwb</code> library, which makes it very easy to reuse this code.</p><h3 id="wiki-and-documentation" tabindex="-1">Wiki and documentation <a class="header-anchor" href="#wiki-and-documentation" aria-label="Permalink to &quot;Wiki and documentation&quot;">‚Äã</a></h3><p>To further lower the technical barrier, we maintain a Wiki that provides documentation on how to use the <code>dagster-cfwb</code> library, how to write Dagster jobs and pipelines, and how to use the data platform. We also document some best practices, coding standards, deployment processes and provide examples of how to use the resources and components in the <code>dagster-cfwb</code> library.</p><h3 id="use-llm-to-help-users" tabindex="-1">Use LLM to help users <a class="header-anchor" href="#use-llm-to-help-users" aria-label="Permalink to &quot;Use LLM to help users&quot;">‚Äã</a></h3><p>To further lower the technical barrier, we are currenlty exploring the use of Large Language Models (LLMs) through a dedicated MCP server to help users write their own Dagster jobs and pipelines. This will allow our data professionals to focus on the business logic of their data pipelines, rather than the technical details of how to connect to the data sources.</p><h2 id="üìñ-level-up-the-data-literacy" tabindex="-1">üìñ Level up the data literacy <a class="header-anchor" href="#üìñ-level-up-the-data-literacy" aria-label="Permalink to &quot;üìñ Level up the data literacy&quot;">‚Äã</a></h2><p>As stated in the introduction, in our organisation very few people are trained in data management and programming. To overcome this challenge, we communicate a lot about our data platform, we train our users, and we provide them with the necessary tools to understand and use the data platform.</p><h3 id="communicate-about-the-data-platform" tabindex="-1">Communicate about the data platform <a class="header-anchor" href="#communicate-about-the-data-platform" aria-label="Permalink to &quot;Communicate about the data platform&quot;">‚Äã</a></h3><p>As shown in the image below, we try to use simple yet powerful images to explain the data platform and its components. This helps our stakeholders understand the data platform, and more importantly, the benefits it brings to the organization.</p>`,13)),s(a,{src:"https://i.imgur.com/bEy2kU2.png",alt:"",width:"800"}),e[2]||(e[2]=o("h3",{id:"train-the-users",tabindex:"-1"},[i("Train the users "),o("a",{class:"header-anchor",href:"#train-the-users","aria-label":'Permalink to "Train the users"'},"‚Äã")],-1)),e[3]||(e[3]=o("p",null,"We also provide training sessions to our users to help them understand the data platform and how to use it. These training sessions are tailored to the level of technical expertise of the users and cover topics such as SQL, Python, Git, Docker, Lakehouse, Data modeling, Data visualization, etc.",-1)),s(a,{src:"https://i.imgur.com/GtduQZ6.png",alt:"",width:"400"}),s(a,{src:"https://i.imgur.com/zwhAa9D.png",alt:"",width:"400"}),e[4]||(e[4]=t('<h3 id="build-a-community-to-share-knowledge" tabindex="-1">Build a community to share knowledge <a class="header-anchor" href="#build-a-community-to-share-knowledge" aria-label="Permalink to &quot;Build a community to share knowledge&quot;">‚Äã</a></h3><p>Last but not least, we try to build a <a href="https://en.wikipedia.org/wiki/Community_of_practice" target="_blank" rel="noreferrer">community of practice</a> to share knowledge and best practices. We call it &quot;Communaut√© des intendants de donn√©es&quot; (Community of Data Stewards). This community is open to all data professionals in the organization, regardless of their level of technical expertise.</p><p>We organise regular meetings to share experiences and help each other with the challenges we face. This helps to create a culture of data literacy and enventually encourages users to participate in the development of data pipelines.</p><h2 id="üìù-conclusion" tabindex="-1">üìù Conclusion <a class="header-anchor" href="#üìù-conclusion" aria-label="Permalink to &quot;üìù Conclusion&quot;">‚Äã</a></h2><p>In this series of articles, we have explored the implementation of a Data Platform based on Dagster for the <a href="https://www.federation-wallonie-bruxelles.be/" target="_blank" rel="noreferrer">F√©d√©ration Wallonie-Bruxelles (FWB)</a>. We have discussed the architecture of our data platform, the automation of our data pipelines, and how we lower the technical barrier for our users and improve their data literacy. We enjoyed building this data platform and we hope that this series of articles will help you to build your own data platform with Open Source tools.</p><p>We also hope that this series of articles will help you to understand the challenges of building a data platform in a polycephalous organization and how to overcome them.</p>',6))])}const g=n(c,[["render",d]]);export{f as __pageData,g as default};
